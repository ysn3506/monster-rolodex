{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAIaA,G,YAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACjB,mCAAOL,EAAMI,QAAQE,QACrB,4BAAIN,EAAMI,QAAQG,aCFdC,G,MAAS,SAACR,GAAD,OAElB,qBAAKC,UAAU,YAAf,SACMD,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAE5B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCRdM,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACnB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoDCG,E,kDAtDb,aAAe,IAAD,8BACZ,gBAsBFH,aAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAYF,EAAEG,OAAOC,SArBpC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAY,IALF,E,gEAUO,IAAD,OAElBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,+BAanC,IAAD,EACuBC,KAAKN,MAA3Bb,EADD,EACCA,SAASU,EADV,EACUA,YACXU,EAAiBpB,EAASqB,QAAO,SAAA1B,GAAO,OAAEA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAChG,OAAQ,sBAAK9B,UAAU,MAAf,UACN,iDACA,cAAC,EAAD,CACEW,YAAY,iBAGZC,aAAee,KAAKf,eAEtB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAvCRI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e21e1787.chunk.js","sourcesContent":["import React from 'react'\n\nimport './card.styles.css';\n\nexport const Card = props=>(\n\n    <div className=\"card-container\">\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}></img>\n         <h2 > {props.monster.name}</h2>\n         <p>{props.monster.email}</p>\n\n    </div>\n\n\n\n)","import React from 'react'\n\nimport {Card} from '../card/card.component';\n\nimport './card-list-styles.css';\n\n\nexport const CardList=(props)=>(\n\n    <div className='card-list'>\n        { props.monsters.map(monster => \n\n        <Card key={monster.id} monster={monster}/>\n\n        )}\n\n    </div> \n   \n)","import React from 'react'\n\nimport './search-box.styles.css'\n\nexport const SearchBox=({placeholder, handleChange})=>(\n    <input \n    className='search' \n    type='search' \n    placeholder={placeholder}\n    onChange={handleChange}/>\n)\n\n\n\n\n","import React , { Component } from 'react'\nimport './App.css';\nimport {CardList} from './components/card-list/card-list.component';\nimport {SearchBox} from './components/search-box/search-box.component'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField:''\n    }\n    // this.handleChange=this.handleChange.bind(this)\n    // handleChange fonksiyonunu arrow function olarak yazdığımız içinyukarıdaki şekilde bind etmemize gerek kalmadı.\n  }\n  componentDidMount() {\n\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n\n  }\n\n  //handleChange fonksiyonunu arrow function olarak yazarsak direk this terimini bind ediyor.\n  // handleChange(e){\n  //   this.setState({searchField:e.target.value})\n  // }\n\n  handleChange=(e)=>{\n    this.setState({searchField:e.target.value})\n  }\n\n  render() {\n    const { monsters,searchField}=this.state\n    const filteredMonsters=monsters.filter(monster=>monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (<div className=\"App\">\n      <h1>Monster Rolodex</h1>\n      <SearchBox\n        placeholder='Search Monster'\n\n        //handleChange= {e=>this.handleChange} Aynı şey\n        handleChange= {this.handleChange}\n      />\n      <CardList monsters={filteredMonsters }></CardList>\n      \n    </div>)\n\n\n\n\n  }\n\n\n\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}